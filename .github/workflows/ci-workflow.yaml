#
# Copyright 2021 Kontain Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: CI Pipeline
on:
  pull_request:
    branches: [master]
    paths-ignore:
      # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - "**.md" # all .md files in repo
      - .vscode/**
  push:
    branches: [master]
    paths-ignore:
      - "**.md" # all .md files in repo
      - .vscode/**

  # Manual trigger.
  # See https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
  workflow_dispatch:

env:
  SP_SUBSCRIPTION_ID: ${{ secrets.SP_SUBSCRIPTION_ID }}
  SP_APPID: ${{ secrets.SP_APPID }}
  SP_PASSWORD: ${{ secrets.SP_PASSWORD }}
  SP_TENANT: ${{ secrets.SP_TENANT }}
  # TRACE: true # uncomment to enable '-x' in all bash scripts

jobs:
  test-aks:
    name: AKS Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make cluster
        run: |
          ./helpers/aks-cluster.sh --tenant=${SP_TENANT} --app-id=${SP_APPID} --password=${SP_PASSWORD} ci-deployment-test

      - uses: ./.github/actions/deploy-kontain

      - uses: ./.github/actions/test-app

      - name: Clean cluster
        if: ${{ always() }}
        run: |
          ./helpers/aks-cluster.sh --tenant=${SP_TENANT} --app-id=${SP_APPID} --password=${SP_PASSWORD} --cleanup ci-deployment-test

  test-k3s:
    name: k3s Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make cluster
        run: |
          ./helpers/k3s-cluster.sh
          echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV

      - uses: ./.github/actions/deploy-kontain

      - name: Restart K3s
        run: sudo systemctl restart k3s

      - uses: ./.github/actions/test-app

      - name: Cleanup cluster
        if: ${{ always() }}
        run: |
          ./helpers/k3s-cluster.sh --cleanup

  test-minikube:
    name: Minikube Deployment
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # We want to test against containerd and crio. crio support is a bit brittle in
        # minikube. In our experience (late 2021) it works better with the podman minikube
        # driver than the docker minikube driver.
        runtime: ["containerd"]
        #driver: ["docker", "podman"]
        driver: ["docker"]
        # include:
        #   - runtime: cri-o
        #     driver: podman
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make cluster
        run: |
          ./helpers/minikube-cluster.sh --runtime=${{ matrix.runtime }} --driver=${{ matrix.driver }}

      - uses: ./.github/actions/deploy-kontain

      - uses: ./.github/actions/test-app

      - name: Cleanup cluster
        if: ${{ always() }}
        run: |
          ./helpers/minikube-cluster.sh --cleanup

  test-gce:
    name: GCE Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          install_components: gke-gcloud-auth-plugin, kubectl

      - name: Make cluster
        run: |
          ./helpers/gce-cluster.sh --project=gke-suport --region=us-central1-a ci-deployment-test
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - uses: ./.github/actions/deploy-kontain

      - uses: ./.github/actions/test-app

      - name: Cleanup cluster
        if: ${{ always() }}
        run: |
          ./helpers/gce-cluster.sh --cleanup ci-deployment-test
